@model IEnumerable<Milestone.Models.Cell>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
@{
    // store image name in a string
    string imgStr = "";
    for (int i = 0; i < Model.Count(); i++)
    {
        if (Model.ElementAt(i).GetFlagged() && !Model.ElementAt(i).GetVisited())
        {
            // <img class="game-button-image" src="~/img/@imgStr" />
            imgStr = "MinesweeperFlag.jpg";
        }
        else if (Model.ElementAt(i).GetVisited() == true)
        {
            if (Model.ElementAt(i).GetLive())
            {
                // Model.ElementAt(i).setImgName("MinesweeperBomb.jpg");
                imgStr = "MinesweeperBomb.jpg";
            }
            else
            {
                // Model.ElementAt(i).setImgName(Model.ElementAt(i).GetNeighbors() + "lightgreybutton.jpg");
                imgStr = Model.ElementAt(i).GetNeighbors() + "lightgreybutton.jpg";
            }
        }
        else
        {
            // Model.ElementAt(i).setImgName("darkgreybutton.jpg");
            imgStr = "darkgreybutton.jpg";
        }
        // start a new line each line of buttons (needs to change depending on level)
        // if you get the square root of the number of buttons, you will have the desired length of each line
        if (i % Math.Sqrt(Model.Count()) == 0)
        {
        <div class="line-break"></div>
        }
    <div class="OneButton" id=@i>
        <button class="game-button" type="submit" value="@Model.ElementAt(i).GetID()" name="cellNum">
            <!-- asp-controller="Cell" asp-action="HandleButtonClick"-->
            <!--show the correct image related to the state -->
            <img class="game-button-image" src="~/img/@imgStr" />
            <!--<img class="game-button-image" src="~/img/Model.ElementAt(i).getImgName()" />-->
        </button>
 </div>
        }
    }
